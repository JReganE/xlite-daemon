name: build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    outputs:
      os: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-12]
        #windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Java
        if: "!startsWith(matrix.os, 'windows')"
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permissions for gradlew
        if: "!startsWith(matrix.os, 'windows')"
        run: chmod +x gradlew

      - name: Build Native Image
        if: "!startsWith(matrix.os, 'windows')"
        run: |
          ./gradlew nativeImage --info
          chmod +x build/graal/Cloudchains-SPV
          rm -f build/graal/Cloudchains-SPV.build_artifacts.txt

      - name: Upload Artifacts
        id: upload
        if: "!startsWith(matrix.os, 'windows')"
        uses: actions/upload-artifact@v2
        with:
          name: native-image-${{ matrix.os }}-amd64
          path: ${{ startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos') && 'build/graal/Cloudchains-SPV' }}

  create-release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v5.1.12
          release_name: Cloudchains-SPV v5.1.12
          draft: false
          prerelease: false

      - name: Download Artifacts
        id: download_artifacts
        uses: actions/download-artifact@v2
        with:
          name: native-image-${{ needs.build.outputs.os }}-amd64

      - name: Upload Release Assets
        id: upload_release_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download_artifacts.outputs.artifact_path }}
          asset_name: Cloudchains-SPV-${{ startsWith(matrix.os, 'ubuntu') && 'linux' || startsWith(matrix.os, 'macos') && 'macos' || matrix.os }}-amd64.zip
          asset_content_type: application/zip

