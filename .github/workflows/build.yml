name: build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-12]
#, windows-latest]

    outputs:
      artifacts: ${{ steps.upload.outputs.artifacts }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      ## LINUX / MACOS
      - name: Setup Java
        if: "!startsWith(matrix.os, 'windows')"
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permissions for gradlew
        if: "!startsWith(matrix.os, 'windows')"
        run: chmod +x gradlew

      - name: Build Native Image
        if: "!startsWith(matrix.os, 'windows')"
        run: |
          ./gradlew nativeImage --info
          chmod +x build/graal/Cloudchains-SPV
          rm -f build/graal/Cloudchains-SPV.build_artifacts.txt
   
      - name: Upload Artifacts
        id: upload
        uses: actions/upload-artifact@v2
        with:
          name: native-image-${{ startsWith(matrix.os, 'macos') && 'macos' || startsWith(matrix.os, 'windows') && 'windows' || 'ubuntu' }}-amd64
          path: build/graal/

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.outputs.artifacts != '' }}
    steps:
      - name: Download Artifacts
        id: download
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build.outputs.artifacts }}
          path: build/graal

      - name: Create Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/graal/*
          token: ${{ secrets.GH_TOKEN }}
          tag_name: 5.1.12
          name: xlite-daemon 5.1.12
          body: |
            This release contains the native image artifacts for different operating systems.

