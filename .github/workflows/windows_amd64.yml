name: Build_windows

on:
  push:
    branches:
      - dev-build-linux-amd64
  pull_request:
    branches:
      - dev-build-linux-amd64
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Load Chocolatey cache
        id: choco-cache
        uses: actions/cache@v2
        with:
         path: C:\ProgramData\chocolatey\lib
         key: choco-packages-${{ runner.os }}
         restore-keys: choco-packages-

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Install Windows SDK 10
        run: choco install windows-sdk-10 -y

      - name: Install Visual Studio Build Tools
        run: choco install -y visualstudio2019-workload-vctools
        
      - name: Cache Chocolatey packages
        uses: actions/cache@v2
        with:
         path: C:\ProgramData\chocolatey\lib
         key: choco-packages-${{ runner.os }}
         restore-keys: choco-packages-

      - name: Build the project using Gradle
        run: ./gradlew.bat build

      - name: Download GraalVM Tooling
        run: ./gradlew.bat downloadGraalTooling

      - name: Extract GraalVM Tooling
        run: ./gradlew.bat extractGraalTooling
               
      - name: Build the native Image
        run: |

          SET GRAAL_HOME=%USERPROFILE%\.gradle\caches\com.palantir.graal\22.3.0\17\graalvm-ce-java17-22.3.0
          SET NATIVE_IMAGE=%GRAAL_HOME%\bin\native-image
          SET CC_PACKAGED_JAR=%cd%\build\libs\xlite-daemon-0.5.12-all.jar

          echo GRAAL_HOME=%GRAAL_HOME%
          echo NATIVE_IMAGE=%NATIVE_IMAGE%
          echo CC_PACKAGED_JAR=%CC_PACKAGED_JAR%

          & $NATIVE_IMAGE -jar $CC_PACKAGED_JAR `
            -H:Name=Cloudchains-SPV `
            -H:Class=io.cloudchains.app.App `
            -H:+JNI `
            -H:+UseServiceLoaderFeature `
            -H:-UseServiceLoaderFeature `
            -H:ReflectionConfigurationFiles=contrib/netty-reflection.json `
            -H:ResourceConfigurationFiles=contrib/resource-config.json `
            -H:IncludeResources='.*/wordlist/english.txt$' `
            -H:Log=registerResource `
            --no-fallback `
            --no-server `
            -da `
            --enable-url-protocols=http,https `
            --initialize-at-build-time=io.netty `
            --initialize-at-build-time=com.google.common `
            --initialize-at-build-time=org.apache.commons.logging `
            --initialize-at-build-time=org.slf4j.LoggerFactory `
            --initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder `
            --initialize-at-build-time=org.slf4j.helpers.NOPLogger `
            --initialize-at-build-time=org.slf4j.helpers.NOPLoggerFactory `
            --initialize-at-build-time=org.slf4j.helpers.SubstituteLoggerFactory `
            --initialize-at-build-time=org.slf4j.helpers.Util `
            --initialize-at-build-time=org.bitcoinj.core.Utils `
            --initialize-at-build-time=org.bitcoinj.core.Sha256Hash `
            --initialize-at-build-time=org.bitcoinj.crypto.MnemonicCode `
            --initialize-at-run-time=io.netty.util.internal.logging.Log4JLogger `
            --initialize-at-run-time=io.netty.handler.codec.http.HttpObjectEncoder `
            --initialize-at-run-time=io.netty.handler.codec.http2.DefaultHttp2FrameWriter `
            --initialize-at-run-time=io.netty.handler.codec.http2.Http2CodecUtil `
            --initialize-at-run-time=io.netty.buffer.PooledByteBufAllocator `
            --initialize-at-run-time=io.netty.buffer.ByteBufAllocator `
            --initialize-at-run-time=io.netty.buffer.ByteBufUtil `
            --initialize-at-run-time=io.netty.buffer.AbstractReferenceCountedByteBuf `
            --initialize-at-run-time=io.netty.handler.codec.http2.Http2CodecUtil `
            --initialize-at-run-time=io.netty.handler.codec.http2.Http2ClientUpgradeCodec `
            --initialize-at-run-time=io.netty.handler.codec.http2.Http2ConnectionHandler `
            --initialize-at-run-time=io.netty.handler.codec.http2.DefaultHttp2FrameWriter `
            --initialize-at-run-time=io.netty.util.AbstractReferenceCounted `
            --initialize-at-run-time=io.netty.handler.codec.http.HttpObjectEncoder `
            --initialize-at-run-time=io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder `
            --initialize-at-run-time=io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder `
            --initialize-at-run-time=io.netty.handler.ssl.util.ThreadLocalInsecureRandom `
            --allow-incomplete-classpath `
            --verbose `
            -H:+ReportExceptionStackTraces

      - name: Create build\nativeImage directory
        run: |
          if (-not (Test-Path -Path "build\nativeImage")) {
            mkdir build\nativeImage
          }

      - name: Move native image file to build\nativeImage directory
        run: move /y Cloudchains-SPV.exe build\nativeImage

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: native-image-windows-amd64
          path: build\nativeImage\
